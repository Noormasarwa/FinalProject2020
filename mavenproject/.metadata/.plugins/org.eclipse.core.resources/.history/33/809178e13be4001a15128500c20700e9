package maven.maven;

import static org.junit.Assert.assertSame;
import static org.junit.Assert.assertTrue;

import java.sql.SQLException;
import java.util.List;

import FrictionlessFlow.*;
import TesttForDataToWrite.Test1;
import junit.framework.Assert;

import org.junit.Test;

import ConnectToMySQl.Sql;
import DataToWrite.AReq;
import DataToWrite.ARes;

/**
 * Unit test for simple App.
 */
public class AppTest 
{
    /**
     * Rigorous Test :-)
     */
    @Test
    public void checkFlow()
    {
        assertTrue( true );
        CheckingAReq ck =new CheckingAReq();
        AReq areq = new Test1().AReqCreator("123", "123", "123", "123344", "12554", "500", "11222", "2020", "0521234567");
        
        assertSame(ck.checkAReq(areq).getTransStatus(), "C");
        areq.setPurchaseAmount("199");
        areq.setAcctNumber("53261033005566");
        assertSame(ck.checkAReq(areq).getTransStatus(), "Y");
        areq.setPurchaseAmount("201");
        assertSame(ck.checkAReq(areq).getTransStatus(), "C");
        areq.setPurchaseAmount("1001");
        assertSame(ck.checkAReq(areq).getTransStatus(), "N");
        areq.setPurchaseAmount("1001");
        areq.setAcctNumber("55661122211");
        assertSame(ck.checkAReq(areq).getTransStatus(), "N");
        
    }
    
    @Test
    public void checkDbFlow() throws ClassNotFoundException, SQLException {
    	Sql sql = new Sql();
    	AReq areq = new Test1().AReqCreator("123", "123", "123", "123344", "12554", "500", "11222", "2020", "0521234567");
    	CheckingAReq ck =new CheckingAReq();
    	ARes ares = ck.checkAReq(areq);
    	int i = sql.addARes(ares);
    	ares.setAcsReferenceNumber(Integer.toString(i));
    	List<ARes> li = sql.getAresByAcsReferenceNumber(ares.getAcsReferenceNumber());
    	assertSame(li.size(),1);
    	ARes ares2 =  li.get(0);
    	
    	Assert.assertEquals(ares, ares2);
    	
    }
    
}
